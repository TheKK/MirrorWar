// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: key.proto

package netGameNodeSDK.input;

public final class KeyOuterClass {
  private KeyOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code testbed.input.KeyType}
   */
  public enum KeyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MOVE_UP = 1;</code>
     */
    MOVE_UP(1),
    /**
     * <code>MOVE_DOWN = 2;</code>
     */
    MOVE_DOWN(2),
    /**
     * <code>MOVE_LEFT = 3;</code>
     */
    MOVE_LEFT(3),
    /**
     * <code>MOVE_RIGHT = 4;</code>
     */
    MOVE_RIGHT(4),
    /**
     * <code>PICK_ITEM = 5;</code>
     */
    PICK_ITEM(5),
    /**
     * <code>SECRET = 6;</code>
     */
    SECRET(6),
    ;

    /**
     * <code>MOVE_UP = 1;</code>
     */
    public static final int MOVE_UP_VALUE = 1;
    /**
     * <code>MOVE_DOWN = 2;</code>
     */
    public static final int MOVE_DOWN_VALUE = 2;
    /**
     * <code>MOVE_LEFT = 3;</code>
     */
    public static final int MOVE_LEFT_VALUE = 3;
    /**
     * <code>MOVE_RIGHT = 4;</code>
     */
    public static final int MOVE_RIGHT_VALUE = 4;
    /**
     * <code>PICK_ITEM = 5;</code>
     */
    public static final int PICK_ITEM_VALUE = 5;
    /**
     * <code>SECRET = 6;</code>
     */
    public static final int SECRET_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KeyType valueOf(int value) {
      return forNumber(value);
    }

    public static KeyType forNumber(int value) {
      switch (value) {
        case 1: return MOVE_UP;
        case 2: return MOVE_DOWN;
        case 3: return MOVE_LEFT;
        case 4: return MOVE_RIGHT;
        case 5: return PICK_ITEM;
        case 6: return SECRET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KeyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        KeyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KeyType>() {
            public KeyType findValueByNumber(int number) {
              return KeyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return netGameNodeSDK.input.KeyOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final KeyType[] VALUES = values();

    public static KeyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private KeyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:testbed.input.KeyType)
  }

  public interface KeyUpOrBuilder extends
      // @@protoc_insertion_point(interface_extends:testbed.input.KeyUp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .testbed.input.KeyType key_type = 1;</code>
     */
    boolean hasKeyType();
    /**
     * <code>required .testbed.input.KeyType key_type = 1;</code>
     */
    netGameNodeSDK.input.KeyOuterClass.KeyType getKeyType();
  }
  /**
   * Protobuf type {@code testbed.input.KeyUp}
   */
  public  static final class KeyUp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:testbed.input.KeyUp)
      KeyUpOrBuilder {
    // Use KeyUp.newBuilder() to construct.
    private KeyUp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyUp() {
      keyType_ = 1;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyUp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              netGameNodeSDK.input.KeyOuterClass.KeyType value = netGameNodeSDK.input.KeyOuterClass.KeyType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                keyType_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_KeyUp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_KeyUp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              netGameNodeSDK.input.KeyOuterClass.KeyUp.class, netGameNodeSDK.input.KeyOuterClass.KeyUp.Builder.class);
    }

    private int bitField0_;
    public static final int KEY_TYPE_FIELD_NUMBER = 1;
    private int keyType_;
    /**
     * <code>required .testbed.input.KeyType key_type = 1;</code>
     */
    public boolean hasKeyType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .testbed.input.KeyType key_type = 1;</code>
     */
    public netGameNodeSDK.input.KeyOuterClass.KeyType getKeyType() {
      netGameNodeSDK.input.KeyOuterClass.KeyType result = netGameNodeSDK.input.KeyOuterClass.KeyType.valueOf(keyType_);
      return result == null ? netGameNodeSDK.input.KeyOuterClass.KeyType.MOVE_UP : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKeyType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, keyType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, keyType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof netGameNodeSDK.input.KeyOuterClass.KeyUp)) {
        return super.equals(obj);
      }
      netGameNodeSDK.input.KeyOuterClass.KeyUp other = (netGameNodeSDK.input.KeyOuterClass.KeyUp) obj;

      boolean result = true;
      result = result && (hasKeyType() == other.hasKeyType());
      if (hasKeyType()) {
        result = result && keyType_ == other.keyType_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasKeyType()) {
        hash = (37 * hash) + KEY_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + keyType_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static netGameNodeSDK.input.KeyOuterClass.KeyUp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyUp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyUp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyUp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyUp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyUp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyUp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyUp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyUp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyUp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(netGameNodeSDK.input.KeyOuterClass.KeyUp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code testbed.input.KeyUp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:testbed.input.KeyUp)
        netGameNodeSDK.input.KeyOuterClass.KeyUpOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_KeyUp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_KeyUp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                netGameNodeSDK.input.KeyOuterClass.KeyUp.class, netGameNodeSDK.input.KeyOuterClass.KeyUp.Builder.class);
      }

      // Construct using testbed.input.KeyOuterClass.KeyUp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        keyType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_KeyUp_descriptor;
      }

      public netGameNodeSDK.input.KeyOuterClass.KeyUp getDefaultInstanceForType() {
        return netGameNodeSDK.input.KeyOuterClass.KeyUp.getDefaultInstance();
      }

      public netGameNodeSDK.input.KeyOuterClass.KeyUp build() {
        netGameNodeSDK.input.KeyOuterClass.KeyUp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public netGameNodeSDK.input.KeyOuterClass.KeyUp buildPartial() {
        netGameNodeSDK.input.KeyOuterClass.KeyUp result = new netGameNodeSDK.input.KeyOuterClass.KeyUp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyType_ = keyType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof netGameNodeSDK.input.KeyOuterClass.KeyUp) {
          return mergeFrom((netGameNodeSDK.input.KeyOuterClass.KeyUp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(netGameNodeSDK.input.KeyOuterClass.KeyUp other) {
        if (other == netGameNodeSDK.input.KeyOuterClass.KeyUp.getDefaultInstance()) return this;
        if (other.hasKeyType()) {
          setKeyType(other.getKeyType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        netGameNodeSDK.input.KeyOuterClass.KeyUp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (netGameNodeSDK.input.KeyOuterClass.KeyUp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int keyType_ = 1;
      /**
       * <code>required .testbed.input.KeyType key_type = 1;</code>
       */
      public boolean hasKeyType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .testbed.input.KeyType key_type = 1;</code>
       */
      public netGameNodeSDK.input.KeyOuterClass.KeyType getKeyType() {
        netGameNodeSDK.input.KeyOuterClass.KeyType result = netGameNodeSDK.input.KeyOuterClass.KeyType.valueOf(keyType_);
        return result == null ? netGameNodeSDK.input.KeyOuterClass.KeyType.MOVE_UP : result;
      }
      /**
       * <code>required .testbed.input.KeyType key_type = 1;</code>
       */
      public Builder setKeyType(netGameNodeSDK.input.KeyOuterClass.KeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        keyType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .testbed.input.KeyType key_type = 1;</code>
       */
      public Builder clearKeyType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyType_ = 1;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:testbed.input.KeyUp)
    }

    // @@protoc_insertion_point(class_scope:testbed.input.KeyUp)
    private static final netGameNodeSDK.input.KeyOuterClass.KeyUp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new netGameNodeSDK.input.KeyOuterClass.KeyUp();
    }

    public static netGameNodeSDK.input.KeyOuterClass.KeyUp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<KeyUp>
        PARSER = new com.google.protobuf.AbstractParser<KeyUp>() {
      public KeyUp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new KeyUp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyUp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyUp> getParserForType() {
      return PARSER;
    }

    public netGameNodeSDK.input.KeyOuterClass.KeyUp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KeyDownOrBuilder extends
      // @@protoc_insertion_point(interface_extends:testbed.input.KeyDown)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .testbed.input.KeyType key_type = 1;</code>
     */
    boolean hasKeyType();
    /**
     * <code>required .testbed.input.KeyType key_type = 1;</code>
     */
    netGameNodeSDK.input.KeyOuterClass.KeyType getKeyType();
  }
  /**
   * Protobuf type {@code testbed.input.KeyDown}
   */
  public  static final class KeyDown extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:testbed.input.KeyDown)
      KeyDownOrBuilder {
    // Use KeyDown.newBuilder() to construct.
    private KeyDown(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyDown() {
      keyType_ = 1;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyDown(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              netGameNodeSDK.input.KeyOuterClass.KeyType value = netGameNodeSDK.input.KeyOuterClass.KeyType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                keyType_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_KeyDown_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_KeyDown_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              netGameNodeSDK.input.KeyOuterClass.KeyDown.class, netGameNodeSDK.input.KeyOuterClass.KeyDown.Builder.class);
    }

    private int bitField0_;
    public static final int KEY_TYPE_FIELD_NUMBER = 1;
    private int keyType_;
    /**
     * <code>required .testbed.input.KeyType key_type = 1;</code>
     */
    public boolean hasKeyType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .testbed.input.KeyType key_type = 1;</code>
     */
    public netGameNodeSDK.input.KeyOuterClass.KeyType getKeyType() {
      netGameNodeSDK.input.KeyOuterClass.KeyType result = netGameNodeSDK.input.KeyOuterClass.KeyType.valueOf(keyType_);
      return result == null ? netGameNodeSDK.input.KeyOuterClass.KeyType.MOVE_UP : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKeyType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, keyType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, keyType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof netGameNodeSDK.input.KeyOuterClass.KeyDown)) {
        return super.equals(obj);
      }
      netGameNodeSDK.input.KeyOuterClass.KeyDown other = (netGameNodeSDK.input.KeyOuterClass.KeyDown) obj;

      boolean result = true;
      result = result && (hasKeyType() == other.hasKeyType());
      if (hasKeyType()) {
        result = result && keyType_ == other.keyType_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasKeyType()) {
        hash = (37 * hash) + KEY_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + keyType_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static netGameNodeSDK.input.KeyOuterClass.KeyDown parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyDown parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyDown parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyDown parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyDown parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyDown parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyDown parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyDown parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyDown parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static netGameNodeSDK.input.KeyOuterClass.KeyDown parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(netGameNodeSDK.input.KeyOuterClass.KeyDown prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code testbed.input.KeyDown}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:testbed.input.KeyDown)
        netGameNodeSDK.input.KeyOuterClass.KeyDownOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_KeyDown_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_KeyDown_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                netGameNodeSDK.input.KeyOuterClass.KeyDown.class, netGameNodeSDK.input.KeyOuterClass.KeyDown.Builder.class);
      }

      // Construct using testbed.input.KeyOuterClass.KeyDown.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        keyType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_KeyDown_descriptor;
      }

      public netGameNodeSDK.input.KeyOuterClass.KeyDown getDefaultInstanceForType() {
        return netGameNodeSDK.input.KeyOuterClass.KeyDown.getDefaultInstance();
      }

      public netGameNodeSDK.input.KeyOuterClass.KeyDown build() {
        netGameNodeSDK.input.KeyOuterClass.KeyDown result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public netGameNodeSDK.input.KeyOuterClass.KeyDown buildPartial() {
        netGameNodeSDK.input.KeyOuterClass.KeyDown result = new netGameNodeSDK.input.KeyOuterClass.KeyDown(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyType_ = keyType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof netGameNodeSDK.input.KeyOuterClass.KeyDown) {
          return mergeFrom((netGameNodeSDK.input.KeyOuterClass.KeyDown)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(netGameNodeSDK.input.KeyOuterClass.KeyDown other) {
        if (other == netGameNodeSDK.input.KeyOuterClass.KeyDown.getDefaultInstance()) return this;
        if (other.hasKeyType()) {
          setKeyType(other.getKeyType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        netGameNodeSDK.input.KeyOuterClass.KeyDown parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (netGameNodeSDK.input.KeyOuterClass.KeyDown) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int keyType_ = 1;
      /**
       * <code>required .testbed.input.KeyType key_type = 1;</code>
       */
      public boolean hasKeyType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .testbed.input.KeyType key_type = 1;</code>
       */
      public netGameNodeSDK.input.KeyOuterClass.KeyType getKeyType() {
        netGameNodeSDK.input.KeyOuterClass.KeyType result = netGameNodeSDK.input.KeyOuterClass.KeyType.valueOf(keyType_);
        return result == null ? netGameNodeSDK.input.KeyOuterClass.KeyType.MOVE_UP : result;
      }
      /**
       * <code>required .testbed.input.KeyType key_type = 1;</code>
       */
      public Builder setKeyType(netGameNodeSDK.input.KeyOuterClass.KeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        keyType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .testbed.input.KeyType key_type = 1;</code>
       */
      public Builder clearKeyType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyType_ = 1;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:testbed.input.KeyDown)
    }

    // @@protoc_insertion_point(class_scope:testbed.input.KeyDown)
    private static final netGameNodeSDK.input.KeyOuterClass.KeyDown DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new netGameNodeSDK.input.KeyOuterClass.KeyDown();
    }

    public static netGameNodeSDK.input.KeyOuterClass.KeyDown getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<KeyDown>
        PARSER = new com.google.protobuf.AbstractParser<KeyDown>() {
      public KeyDown parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new KeyDown(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyDown> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyDown> getParserForType() {
      return PARSER;
    }

    public netGameNodeSDK.input.KeyOuterClass.KeyDown getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:testbed.input.Key)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .testbed.input.KeyUp key_up = 1;</code>
     */
    boolean hasKeyUp();
    /**
     * <code>optional .testbed.input.KeyUp key_up = 1;</code>
     */
    netGameNodeSDK.input.KeyOuterClass.KeyUp getKeyUp();
    /**
     * <code>optional .testbed.input.KeyUp key_up = 1;</code>
     */
    netGameNodeSDK.input.KeyOuterClass.KeyUpOrBuilder getKeyUpOrBuilder();

    /**
     * <code>optional .testbed.input.KeyDown key_down = 2;</code>
     */
    boolean hasKeyDown();
    /**
     * <code>optional .testbed.input.KeyDown key_down = 2;</code>
     */
    netGameNodeSDK.input.KeyOuterClass.KeyDown getKeyDown();
    /**
     * <code>optional .testbed.input.KeyDown key_down = 2;</code>
     */
    netGameNodeSDK.input.KeyOuterClass.KeyDownOrBuilder getKeyDownOrBuilder();

    public netGameNodeSDK.input.KeyOuterClass.Key.KeyCase getKeyCase();
  }
  /**
   * Protobuf type {@code testbed.input.Key}
   */
  public  static final class Key extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:testbed.input.Key)
      KeyOrBuilder {
    // Use Key.newBuilder() to construct.
    private Key(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Key() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Key(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              netGameNodeSDK.input.KeyOuterClass.KeyUp.Builder subBuilder = null;
              if (keyCase_ == 1) {
                subBuilder = ((netGameNodeSDK.input.KeyOuterClass.KeyUp) key_).toBuilder();
              }
              key_ =
                  input.readMessage(netGameNodeSDK.input.KeyOuterClass.KeyUp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((netGameNodeSDK.input.KeyOuterClass.KeyUp) key_);
                key_ = subBuilder.buildPartial();
              }
              keyCase_ = 1;
              break;
            }
            case 18: {
              netGameNodeSDK.input.KeyOuterClass.KeyDown.Builder subBuilder = null;
              if (keyCase_ == 2) {
                subBuilder = ((netGameNodeSDK.input.KeyOuterClass.KeyDown) key_).toBuilder();
              }
              key_ =
                  input.readMessage(netGameNodeSDK.input.KeyOuterClass.KeyDown.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((netGameNodeSDK.input.KeyOuterClass.KeyDown) key_);
                key_ = subBuilder.buildPartial();
              }
              keyCase_ = 2;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_Key_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_Key_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              netGameNodeSDK.input.KeyOuterClass.Key.class, netGameNodeSDK.input.KeyOuterClass.Key.Builder.class);
    }

    private int bitField0_;
    private int keyCase_ = 0;
    private java.lang.Object key_;
    public enum KeyCase
        implements com.google.protobuf.Internal.EnumLite {
      KEY_UP(1),
      KEY_DOWN(2),
      KEY_NOT_SET(0);
      private final int value;
      private KeyCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static KeyCase valueOf(int value) {
        return forNumber(value);
      }

      public static KeyCase forNumber(int value) {
        switch (value) {
          case 1: return KEY_UP;
          case 2: return KEY_DOWN;
          case 0: return KEY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public KeyCase
    getKeyCase() {
      return KeyCase.forNumber(
          keyCase_);
    }

    public static final int KEY_UP_FIELD_NUMBER = 1;
    /**
     * <code>optional .testbed.input.KeyUp key_up = 1;</code>
     */
    public boolean hasKeyUp() {
      return keyCase_ == 1;
    }
    /**
     * <code>optional .testbed.input.KeyUp key_up = 1;</code>
     */
    public netGameNodeSDK.input.KeyOuterClass.KeyUp getKeyUp() {
      if (keyCase_ == 1) {
         return (netGameNodeSDK.input.KeyOuterClass.KeyUp) key_;
      }
      return netGameNodeSDK.input.KeyOuterClass.KeyUp.getDefaultInstance();
    }
    /**
     * <code>optional .testbed.input.KeyUp key_up = 1;</code>
     */
    public netGameNodeSDK.input.KeyOuterClass.KeyUpOrBuilder getKeyUpOrBuilder() {
      if (keyCase_ == 1) {
         return (netGameNodeSDK.input.KeyOuterClass.KeyUp) key_;
      }
      return netGameNodeSDK.input.KeyOuterClass.KeyUp.getDefaultInstance();
    }

    public static final int KEY_DOWN_FIELD_NUMBER = 2;
    /**
     * <code>optional .testbed.input.KeyDown key_down = 2;</code>
     */
    public boolean hasKeyDown() {
      return keyCase_ == 2;
    }
    /**
     * <code>optional .testbed.input.KeyDown key_down = 2;</code>
     */
    public netGameNodeSDK.input.KeyOuterClass.KeyDown getKeyDown() {
      if (keyCase_ == 2) {
         return (netGameNodeSDK.input.KeyOuterClass.KeyDown) key_;
      }
      return netGameNodeSDK.input.KeyOuterClass.KeyDown.getDefaultInstance();
    }
    /**
     * <code>optional .testbed.input.KeyDown key_down = 2;</code>
     */
    public netGameNodeSDK.input.KeyOuterClass.KeyDownOrBuilder getKeyDownOrBuilder() {
      if (keyCase_ == 2) {
         return (netGameNodeSDK.input.KeyOuterClass.KeyDown) key_;
      }
      return netGameNodeSDK.input.KeyOuterClass.KeyDown.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasKeyUp()) {
        if (!getKeyUp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasKeyDown()) {
        if (!getKeyDown().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (keyCase_ == 1) {
        output.writeMessage(1, (netGameNodeSDK.input.KeyOuterClass.KeyUp) key_);
      }
      if (keyCase_ == 2) {
        output.writeMessage(2, (netGameNodeSDK.input.KeyOuterClass.KeyDown) key_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (keyCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (netGameNodeSDK.input.KeyOuterClass.KeyUp) key_);
      }
      if (keyCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (netGameNodeSDK.input.KeyOuterClass.KeyDown) key_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof netGameNodeSDK.input.KeyOuterClass.Key)) {
        return super.equals(obj);
      }
      netGameNodeSDK.input.KeyOuterClass.Key other = (netGameNodeSDK.input.KeyOuterClass.Key) obj;

      boolean result = true;
      result = result && getKeyCase().equals(
          other.getKeyCase());
      if (!result) return false;
      switch (keyCase_) {
        case 1:
          result = result && getKeyUp()
              .equals(other.getKeyUp());
          break;
        case 2:
          result = result && getKeyDown()
              .equals(other.getKeyDown());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      switch (keyCase_) {
        case 1:
          hash = (37 * hash) + KEY_UP_FIELD_NUMBER;
          hash = (53 * hash) + getKeyUp().hashCode();
          break;
        case 2:
          hash = (37 * hash) + KEY_DOWN_FIELD_NUMBER;
          hash = (53 * hash) + getKeyDown().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static netGameNodeSDK.input.KeyOuterClass.Key parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static netGameNodeSDK.input.KeyOuterClass.Key parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.Key parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static netGameNodeSDK.input.KeyOuterClass.Key parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.Key parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static netGameNodeSDK.input.KeyOuterClass.Key parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.Key parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static netGameNodeSDK.input.KeyOuterClass.Key parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static netGameNodeSDK.input.KeyOuterClass.Key parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static netGameNodeSDK.input.KeyOuterClass.Key parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(netGameNodeSDK.input.KeyOuterClass.Key prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code testbed.input.Key}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:testbed.input.Key)
        netGameNodeSDK.input.KeyOuterClass.KeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_Key_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_Key_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                netGameNodeSDK.input.KeyOuterClass.Key.class, netGameNodeSDK.input.KeyOuterClass.Key.Builder.class);
      }

      // Construct using testbed.input.KeyOuterClass.Key.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        keyCase_ = 0;
        key_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return netGameNodeSDK.input.KeyOuterClass.internal_static_testbed_input_Key_descriptor;
      }

      public netGameNodeSDK.input.KeyOuterClass.Key getDefaultInstanceForType() {
        return netGameNodeSDK.input.KeyOuterClass.Key.getDefaultInstance();
      }

      public netGameNodeSDK.input.KeyOuterClass.Key build() {
        netGameNodeSDK.input.KeyOuterClass.Key result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public netGameNodeSDK.input.KeyOuterClass.Key buildPartial() {
        netGameNodeSDK.input.KeyOuterClass.Key result = new netGameNodeSDK.input.KeyOuterClass.Key(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (keyCase_ == 1) {
          if (keyUpBuilder_ == null) {
            result.key_ = key_;
          } else {
            result.key_ = keyUpBuilder_.build();
          }
        }
        if (keyCase_ == 2) {
          if (keyDownBuilder_ == null) {
            result.key_ = key_;
          } else {
            result.key_ = keyDownBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.keyCase_ = keyCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof netGameNodeSDK.input.KeyOuterClass.Key) {
          return mergeFrom((netGameNodeSDK.input.KeyOuterClass.Key)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(netGameNodeSDK.input.KeyOuterClass.Key other) {
        if (other == netGameNodeSDK.input.KeyOuterClass.Key.getDefaultInstance()) return this;
        switch (other.getKeyCase()) {
          case KEY_UP: {
            mergeKeyUp(other.getKeyUp());
            break;
          }
          case KEY_DOWN: {
            mergeKeyDown(other.getKeyDown());
            break;
          }
          case KEY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasKeyUp()) {
          if (!getKeyUp().isInitialized()) {
            return false;
          }
        }
        if (hasKeyDown()) {
          if (!getKeyDown().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        netGameNodeSDK.input.KeyOuterClass.Key parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (netGameNodeSDK.input.KeyOuterClass.Key) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int keyCase_ = 0;
      private java.lang.Object key_;
      public KeyCase
          getKeyCase() {
        return KeyCase.forNumber(
            keyCase_);
      }

      public Builder clearKey() {
        keyCase_ = 0;
        key_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          netGameNodeSDK.input.KeyOuterClass.KeyUp, netGameNodeSDK.input.KeyOuterClass.KeyUp.Builder, netGameNodeSDK.input.KeyOuterClass.KeyUpOrBuilder> keyUpBuilder_;
      /**
       * <code>optional .testbed.input.KeyUp key_up = 1;</code>
       */
      public boolean hasKeyUp() {
        return keyCase_ == 1;
      }
      /**
       * <code>optional .testbed.input.KeyUp key_up = 1;</code>
       */
      public netGameNodeSDK.input.KeyOuterClass.KeyUp getKeyUp() {
        if (keyUpBuilder_ == null) {
          if (keyCase_ == 1) {
            return (netGameNodeSDK.input.KeyOuterClass.KeyUp) key_;
          }
          return netGameNodeSDK.input.KeyOuterClass.KeyUp.getDefaultInstance();
        } else {
          if (keyCase_ == 1) {
            return keyUpBuilder_.getMessage();
          }
          return netGameNodeSDK.input.KeyOuterClass.KeyUp.getDefaultInstance();
        }
      }
      /**
       * <code>optional .testbed.input.KeyUp key_up = 1;</code>
       */
      public Builder setKeyUp(netGameNodeSDK.input.KeyOuterClass.KeyUp value) {
        if (keyUpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          key_ = value;
          onChanged();
        } else {
          keyUpBuilder_.setMessage(value);
        }
        keyCase_ = 1;
        return this;
      }
      /**
       * <code>optional .testbed.input.KeyUp key_up = 1;</code>
       */
      public Builder setKeyUp(
          netGameNodeSDK.input.KeyOuterClass.KeyUp.Builder builderForValue) {
        if (keyUpBuilder_ == null) {
          key_ = builderForValue.build();
          onChanged();
        } else {
          keyUpBuilder_.setMessage(builderForValue.build());
        }
        keyCase_ = 1;
        return this;
      }
      /**
       * <code>optional .testbed.input.KeyUp key_up = 1;</code>
       */
      public Builder mergeKeyUp(netGameNodeSDK.input.KeyOuterClass.KeyUp value) {
        if (keyUpBuilder_ == null) {
          if (keyCase_ == 1 &&
              key_ != netGameNodeSDK.input.KeyOuterClass.KeyUp.getDefaultInstance()) {
            key_ = netGameNodeSDK.input.KeyOuterClass.KeyUp.newBuilder((netGameNodeSDK.input.KeyOuterClass.KeyUp) key_)
                .mergeFrom(value).buildPartial();
          } else {
            key_ = value;
          }
          onChanged();
        } else {
          if (keyCase_ == 1) {
            keyUpBuilder_.mergeFrom(value);
          }
          keyUpBuilder_.setMessage(value);
        }
        keyCase_ = 1;
        return this;
      }
      /**
       * <code>optional .testbed.input.KeyUp key_up = 1;</code>
       */
      public Builder clearKeyUp() {
        if (keyUpBuilder_ == null) {
          if (keyCase_ == 1) {
            keyCase_ = 0;
            key_ = null;
            onChanged();
          }
        } else {
          if (keyCase_ == 1) {
            keyCase_ = 0;
            key_ = null;
          }
          keyUpBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .testbed.input.KeyUp key_up = 1;</code>
       */
      public netGameNodeSDK.input.KeyOuterClass.KeyUp.Builder getKeyUpBuilder() {
        return getKeyUpFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .testbed.input.KeyUp key_up = 1;</code>
       */
      public netGameNodeSDK.input.KeyOuterClass.KeyUpOrBuilder getKeyUpOrBuilder() {
        if ((keyCase_ == 1) && (keyUpBuilder_ != null)) {
          return keyUpBuilder_.getMessageOrBuilder();
        } else {
          if (keyCase_ == 1) {
            return (netGameNodeSDK.input.KeyOuterClass.KeyUp) key_;
          }
          return netGameNodeSDK.input.KeyOuterClass.KeyUp.getDefaultInstance();
        }
      }
      /**
       * <code>optional .testbed.input.KeyUp key_up = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          netGameNodeSDK.input.KeyOuterClass.KeyUp, netGameNodeSDK.input.KeyOuterClass.KeyUp.Builder, netGameNodeSDK.input.KeyOuterClass.KeyUpOrBuilder> 
          getKeyUpFieldBuilder() {
        if (keyUpBuilder_ == null) {
          if (!(keyCase_ == 1)) {
            key_ = netGameNodeSDK.input.KeyOuterClass.KeyUp.getDefaultInstance();
          }
          keyUpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              netGameNodeSDK.input.KeyOuterClass.KeyUp, netGameNodeSDK.input.KeyOuterClass.KeyUp.Builder, netGameNodeSDK.input.KeyOuterClass.KeyUpOrBuilder>(
                  (netGameNodeSDK.input.KeyOuterClass.KeyUp) key_,
                  getParentForChildren(),
                  isClean());
          key_ = null;
        }
        keyCase_ = 1;
        onChanged();;
        return keyUpBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          netGameNodeSDK.input.KeyOuterClass.KeyDown, netGameNodeSDK.input.KeyOuterClass.KeyDown.Builder, netGameNodeSDK.input.KeyOuterClass.KeyDownOrBuilder> keyDownBuilder_;
      /**
       * <code>optional .testbed.input.KeyDown key_down = 2;</code>
       */
      public boolean hasKeyDown() {
        return keyCase_ == 2;
      }
      /**
       * <code>optional .testbed.input.KeyDown key_down = 2;</code>
       */
      public netGameNodeSDK.input.KeyOuterClass.KeyDown getKeyDown() {
        if (keyDownBuilder_ == null) {
          if (keyCase_ == 2) {
            return (netGameNodeSDK.input.KeyOuterClass.KeyDown) key_;
          }
          return netGameNodeSDK.input.KeyOuterClass.KeyDown.getDefaultInstance();
        } else {
          if (keyCase_ == 2) {
            return keyDownBuilder_.getMessage();
          }
          return netGameNodeSDK.input.KeyOuterClass.KeyDown.getDefaultInstance();
        }
      }
      /**
       * <code>optional .testbed.input.KeyDown key_down = 2;</code>
       */
      public Builder setKeyDown(netGameNodeSDK.input.KeyOuterClass.KeyDown value) {
        if (keyDownBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          key_ = value;
          onChanged();
        } else {
          keyDownBuilder_.setMessage(value);
        }
        keyCase_ = 2;
        return this;
      }
      /**
       * <code>optional .testbed.input.KeyDown key_down = 2;</code>
       */
      public Builder setKeyDown(
          netGameNodeSDK.input.KeyOuterClass.KeyDown.Builder builderForValue) {
        if (keyDownBuilder_ == null) {
          key_ = builderForValue.build();
          onChanged();
        } else {
          keyDownBuilder_.setMessage(builderForValue.build());
        }
        keyCase_ = 2;
        return this;
      }
      /**
       * <code>optional .testbed.input.KeyDown key_down = 2;</code>
       */
      public Builder mergeKeyDown(netGameNodeSDK.input.KeyOuterClass.KeyDown value) {
        if (keyDownBuilder_ == null) {
          if (keyCase_ == 2 &&
              key_ != netGameNodeSDK.input.KeyOuterClass.KeyDown.getDefaultInstance()) {
            key_ = netGameNodeSDK.input.KeyOuterClass.KeyDown.newBuilder((netGameNodeSDK.input.KeyOuterClass.KeyDown) key_)
                .mergeFrom(value).buildPartial();
          } else {
            key_ = value;
          }
          onChanged();
        } else {
          if (keyCase_ == 2) {
            keyDownBuilder_.mergeFrom(value);
          }
          keyDownBuilder_.setMessage(value);
        }
        keyCase_ = 2;
        return this;
      }
      /**
       * <code>optional .testbed.input.KeyDown key_down = 2;</code>
       */
      public Builder clearKeyDown() {
        if (keyDownBuilder_ == null) {
          if (keyCase_ == 2) {
            keyCase_ = 0;
            key_ = null;
            onChanged();
          }
        } else {
          if (keyCase_ == 2) {
            keyCase_ = 0;
            key_ = null;
          }
          keyDownBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .testbed.input.KeyDown key_down = 2;</code>
       */
      public netGameNodeSDK.input.KeyOuterClass.KeyDown.Builder getKeyDownBuilder() {
        return getKeyDownFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .testbed.input.KeyDown key_down = 2;</code>
       */
      public netGameNodeSDK.input.KeyOuterClass.KeyDownOrBuilder getKeyDownOrBuilder() {
        if ((keyCase_ == 2) && (keyDownBuilder_ != null)) {
          return keyDownBuilder_.getMessageOrBuilder();
        } else {
          if (keyCase_ == 2) {
            return (netGameNodeSDK.input.KeyOuterClass.KeyDown) key_;
          }
          return netGameNodeSDK.input.KeyOuterClass.KeyDown.getDefaultInstance();
        }
      }
      /**
       * <code>optional .testbed.input.KeyDown key_down = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          netGameNodeSDK.input.KeyOuterClass.KeyDown, netGameNodeSDK.input.KeyOuterClass.KeyDown.Builder, netGameNodeSDK.input.KeyOuterClass.KeyDownOrBuilder> 
          getKeyDownFieldBuilder() {
        if (keyDownBuilder_ == null) {
          if (!(keyCase_ == 2)) {
            key_ = netGameNodeSDK.input.KeyOuterClass.KeyDown.getDefaultInstance();
          }
          keyDownBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              netGameNodeSDK.input.KeyOuterClass.KeyDown, netGameNodeSDK.input.KeyOuterClass.KeyDown.Builder, netGameNodeSDK.input.KeyOuterClass.KeyDownOrBuilder>(
                  (netGameNodeSDK.input.KeyOuterClass.KeyDown) key_,
                  getParentForChildren(),
                  isClean());
          key_ = null;
        }
        keyCase_ = 2;
        onChanged();;
        return keyDownBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:testbed.input.Key)
    }

    // @@protoc_insertion_point(class_scope:testbed.input.Key)
    private static final netGameNodeSDK.input.KeyOuterClass.Key DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new netGameNodeSDK.input.KeyOuterClass.Key();
    }

    public static netGameNodeSDK.input.KeyOuterClass.Key getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Key>
        PARSER = new com.google.protobuf.AbstractParser<Key>() {
      public Key parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Key(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Key> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Key> getParserForType() {
      return PARSER;
    }

    public netGameNodeSDK.input.KeyOuterClass.Key getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_testbed_input_KeyUp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_testbed_input_KeyUp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_testbed_input_KeyDown_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_testbed_input_KeyDown_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_testbed_input_Key_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_testbed_input_Key_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tkey.proto\022\rtestbed.input\"1\n\005KeyUp\022(\n\010k" +
      "ey_type\030\001 \002(\0162\026.testbed.input.KeyType\"3\n" +
      "\007KeyDown\022(\n\010key_type\030\001 \002(\0162\026.testbed.inp" +
      "ut.KeyType\"`\n\003Key\022&\n\006key_up\030\001 \001(\0132\024.test" +
      "bed.input.KeyUpH\000\022*\n\010key_down\030\002 \001(\0132\026.te" +
      "stbed.input.KeyDownH\000B\005\n\003key*_\n\007KeyType\022" +
      "\013\n\007MOVE_UP\020\001\022\r\n\tMOVE_DOWN\020\002\022\r\n\tMOVE_LEFT" +
      "\020\003\022\016\n\nMOVE_RIGHT\020\004\022\r\n\tPICK_ITEM\020\005\022\n\n\006SEC" +
      "RET\020\006"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_testbed_input_KeyUp_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_testbed_input_KeyUp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_testbed_input_KeyUp_descriptor,
        new java.lang.String[] { "KeyType", });
    internal_static_testbed_input_KeyDown_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_testbed_input_KeyDown_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_testbed_input_KeyDown_descriptor,
        new java.lang.String[] { "KeyType", });
    internal_static_testbed_input_Key_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_testbed_input_Key_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_testbed_input_Key_descriptor,
        new java.lang.String[] { "KeyUp", "KeyDown", "Key", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
